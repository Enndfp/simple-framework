# 设置日志的打印级别以及要输出到的地方
# 优先级从高到低分别是 ERROR、WARN、INFO、DEBUG
# 比如在这里定义了 INFO 级别，则应用程序中所有 DEBUG 级别的日志信息将不被打印
# stdout 指代要输出到的地方，可以是不同的自定义名称，也可以有多个，表示输出到控制台
log4j.rootLogger=debug,stdout

# 输出信息到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# 输出日志的格式
# %c: 输出日志信息所属的类目，通常就是所在类的全名
# %d: 输出日志时间点的日期或时间
# %p: 输出日志信息优先级，即 DEBUG,INFO,WARN,ERROR,FATAL
# %m: 输出代码中指定的消息，产生的日志具体信息
# %n: 输出一个回车换行符，Windows 平台为"\r\n",Unix 平台为"\n"输出日志信息换行
# 示例：com.enndfp.HelloServlet 15:00:00 -- DEBUG -- test
log4j.appender.stdout.layout.ConversionPattern=%c %d{HH:mm:ss} -- %p -- %m%n